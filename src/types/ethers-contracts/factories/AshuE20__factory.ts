/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AshuE20, AshuE20Interface } from "../AshuE20";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "INITIAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SYMBOL",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600e81526020017f615368755245433230546f6b656e0000000000000000000000000000000000008152506040518060400160405280600281526020017f415300000000000000000000000000000000000000000000000000000000000081525081600390816200008f9190620004d0565b508060049081620000a19190620004d0565b505050620000c133612710620000c7640100000000026401000000009004565b620006d2565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000139576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001309062000618565b60405180910390fd5b620001566000838362000246640100000000026401000000009004565b80600260008282546200016a919062000669565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200021d9190620006b5565b60405180910390a362000242600083836200024b640100000000026401000000009004565b5050565b505050565b505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002d257607f821691505b602082108103620002e857620002e76200028a565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b60008160020a8302905092915050565b600060088302620003557fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000313565b62000361868362000313565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003ae620003a8620003a28462000379565b62000383565b62000379565b9050919050565b6000819050919050565b620003ca836200038d565b620003e2620003d982620003b5565b84845462000323565b825550505050565b600090565b620003f9620003ea565b62000406818484620003bf565b505050565b5b818110156200042e5762000422600082620003ef565b6001810190506200040c565b5050565b601f8211156200047d576200044781620002ee565b620004528462000303565b8101602085101562000462578190505b6200047a620004718562000303565b8301826200040b565b50505b505050565b60008160020a8304905092915050565b6000620004a56000198460080262000482565b1980831691505092915050565b6000620004c0838362000492565b9150826002028217905092915050565b620004db8262000250565b67ffffffffffffffff811115620004f757620004f66200025b565b5b620005038254620002b9565b6200051082828562000432565b600060209050601f83116001811462000548576000841562000533578287015190505b6200053f8582620004b2565b865550620005af565b601f1984166200055886620002ee565b60005b8281101562000582578489015182556001820191506020850194506020810190506200055b565b86831015620005a257848901516200059e601f89168262000492565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b600062000600601f83620005b7565b91506200060d82620005c8565b602082019050919050565b600060208201905081810360008301526200063381620005f1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620006768262000379565b9150620006838362000379565b92508282019050808211156200069e576200069d6200063a565b5b92915050565b620006af8162000379565b82525050565b6000602082019050620006cc6000830184620006a4565b92915050565b61135b80620006e26000396000f3fe608060405234801561001057600080fd5b5060043610610107576000357c01000000000000000000000000000000000000000000000000000000009004806370a08231116100a9578063a457c2d711610083578063a457c2d714610280578063a9059cbb146102b0578063dd62ed3e146102e0578063f76f8d781461031057610107565b806370a082311461021457806395d89b4114610244578063a3f4df7e1461026257610107565b806323b872dd116100e557806323b872dd146101785780632ff2e9dc146101a8578063313ce567146101c657806339509351146101e457610107565b806306fdde031461010c578063095ea7b31461012a57806318160ddd1461015a575b600080fd5b61011461032e565b6040516101219190610c38565b60405180910390f35b610144600480360381019061013f9190610cf3565b6103c0565b6040516101519190610d4e565b60405180910390f35b6101626103e3565b60405161016f9190610d78565b60405180910390f35b610192600480360381019061018d9190610d93565b6103ed565b60405161019f9190610d4e565b60405180910390f35b6101b061041c565b6040516101bd9190610d78565b60405180910390f35b6101ce610422565b6040516101db9190610e02565b60405180910390f35b6101fe60048036038101906101f99190610cf3565b610427565b60405161020b9190610d4e565b60405180910390f35b61022e60048036038101906102299190610e1d565b61045e565b60405161023b9190610d78565b60405180910390f35b61024c6104a6565b6040516102599190610c38565b60405180910390f35b61026a610538565b6040516102779190610c38565b60405180910390f35b61029a60048036038101906102959190610cf3565b610571565b6040516102a79190610d4e565b60405180910390f35b6102ca60048036038101906102c59190610cf3565b6105e8565b6040516102d79190610d4e565b60405180910390f35b6102fa60048036038101906102f59190610e4a565b61060b565b6040516103079190610d78565b60405180910390f35b610318610692565b6040516103259190610c38565b60405180910390f35b60606003805461033d90610eb9565b80601f016020809104026020016040519081016040528092919081815260200182805461036990610eb9565b80156103b65780601f1061038b576101008083540402835291602001916103b6565b820191906000526020600020905b81548152906001019060200180831161039957829003601f168201915b5050505050905090565b6000806103cb6106cb565b90506103d88185856106d3565b600191505092915050565b6000600254905090565b6000806103f86106cb565b905061040585828561089c565b610410858585610928565b60019150509392505050565b61271081565b600090565b6000806104326106cb565b9050610453818585610444858961060b565b61044e9190610f19565b6106d3565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546104b590610eb9565b80601f01602080910402602001604051908101604052809291908181526020018280546104e190610eb9565b801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b5050505050905090565b6040518060400160405280600e81526020017f615368755245433230546f6b656e00000000000000000000000000000000000081525081565b60008061057c6106cb565b9050600061058a828661060b565b9050838110156105cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c690610fbf565b60405180910390fd5b6105dc82868684036106d3565b60019250505092915050565b6000806105f36106cb565b9050610600818585610928565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6040518060400160405280600281526020017f415300000000000000000000000000000000000000000000000000000000000081525081565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073990611051565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a8906110e3565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258360405161088f9190610d78565b60405180910390a3505050565b60006108a8848461060b565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109225781811015610914576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090b9061114f565b60405180910390fd5b61092184848484036106d3565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098e906111e1565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a06576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109fd90611273565b60405180910390fd5b610a11838383610b9e565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610a97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8e90611305565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b859190610d78565b60405180910390a3610b98848484610ba3565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610be2578082015181840152602081019050610bc7565b60008484015250505050565b6000601f19601f8301169050919050565b6000610c0a82610ba8565b610c148185610bb3565b9350610c24818560208601610bc4565b610c2d81610bee565b840191505092915050565b60006020820190508181036000830152610c528184610bff565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610c8a82610c5f565b9050919050565b610c9a81610c7f565b8114610ca557600080fd5b50565b600081359050610cb781610c91565b92915050565b6000819050919050565b610cd081610cbd565b8114610cdb57600080fd5b50565b600081359050610ced81610cc7565b92915050565b60008060408385031215610d0a57610d09610c5a565b5b6000610d1885828601610ca8565b9250506020610d2985828601610cde565b9150509250929050565b60008115159050919050565b610d4881610d33565b82525050565b6000602082019050610d636000830184610d3f565b92915050565b610d7281610cbd565b82525050565b6000602082019050610d8d6000830184610d69565b92915050565b600080600060608486031215610dac57610dab610c5a565b5b6000610dba86828701610ca8565b9350506020610dcb86828701610ca8565b9250506040610ddc86828701610cde565b9150509250925092565b600060ff82169050919050565b610dfc81610de6565b82525050565b6000602082019050610e176000830184610df3565b92915050565b600060208284031215610e3357610e32610c5a565b5b6000610e4184828501610ca8565b91505092915050565b60008060408385031215610e6157610e60610c5a565b5b6000610e6f85828601610ca8565b9250506020610e8085828601610ca8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ed157607f821691505b602082108103610ee457610ee3610e8a565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f2482610cbd565b9150610f2f83610cbd565b9250828201905080821115610f4757610f46610eea565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610fa9602583610bb3565b9150610fb482610f4d565b604082019050919050565b60006020820190508181036000830152610fd881610f9c565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061103b602483610bb3565b915061104682610fdf565b604082019050919050565b6000602082019050818103600083015261106a8161102e565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006110cd602283610bb3565b91506110d882611071565b604082019050919050565b600060208201905081810360008301526110fc816110c0565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611139601d83610bb3565b915061114482611103565b602082019050919050565b600060208201905081810360008301526111688161112c565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006111cb602583610bb3565b91506111d68261116f565b604082019050919050565b600060208201905081810360008301526111fa816111be565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061125d602383610bb3565b915061126882611201565b604082019050919050565b6000602082019050818103600083015261128c81611250565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006112ef602683610bb3565b91506112fa82611293565b604082019050919050565b6000602082019050818103600083015261131e816112e2565b905091905056fea2646970667358221220b839d1a537d7f450df17e55ab15a7b6d9a15cbf7eed75728435a1ed354e1ac1164736f6c63430008140033";

type AshuE20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AshuE20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AshuE20__factory extends ContractFactory {
  constructor(...args: AshuE20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: string }): Promise<AshuE20> {
    return super.deploy(overrides || {}) as Promise<AshuE20>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AshuE20 {
    return super.attach(address) as AshuE20;
  }
  override connect(signer: Signer): AshuE20__factory {
    return super.connect(signer) as AshuE20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AshuE20Interface {
    return new utils.Interface(_abi) as AshuE20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AshuE20 {
    return new Contract(address, _abi, signerOrProvider) as AshuE20;
  }
}
