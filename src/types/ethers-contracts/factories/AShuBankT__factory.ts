/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AShuBankT, AShuBankTInterface } from "../AShuBankT";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "interest",
        type: "uint256",
      },
    ],
    name: "InterestCaculated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "ANNUAL_INTEREST_RATE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "MAX_WITHDRAWAL_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "SECONDS_PER_YEAR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
    payable: true,
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "caculateInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
  {
    inputs: [],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
    constant: true,
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bab806100206000396000f3fe608060405260043610610098576000357c010000000000000000000000000000000000000000000000000000000090048063b67833931161006b578063b67833931461016b578063d0e30db014610196578063e6a69ab8146101a0578063fa3c3092146101cb57610098565b806312065fe01461009d5780632e1a7d4d146100c857806347734892146100f15780638542a1ab1461012e575b600080fd5b3480156100a957600080fd5b506100b26101f6565b6040516100bf91906106e5565b60405180910390f35b3480156100d457600080fd5b506100ef60048036038101906100ea9190610731565b610215565b005b3480156100fd57600080fd5b50610118600480360381019061011391906107bc565b61041f565b60405161012591906106e5565b60405180910390f35b34801561013a57600080fd5b50610155600480360381019061015091906107bc565b61047d565b60405161016291906106e5565b60405180910390f35b34801561017757600080fd5b50610180610532565b60405161018d91906106e5565b60405180910390f35b61019e610538565b005b3480156101ac57600080fd5b506101b56106c0565b6040516101c291906106e5565b60405180910390f35b3480156101d757600080fd5b506101e06106c7565b6040516101ed91906106e5565b60405180910390f35b60003073ffffffffffffffffffffffffffffffffffffffff1631905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508181600001541161029d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029490610846565b60405180910390fd5b600082116102e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102d7906108d8565b60405180910390fd5b60006102eb3361047d565b905060008183600001546102ff9190610927565b9050838161030d919061095b565b836000018190555042836002018190555060003373ffffffffffffffffffffffffffffffffffffffff1685604051610344906109c0565b60006040518083038185875af1925050503d8060008114610381576040519150601f19603f3d011682016040523d82523d6000602084013e610386565b606091505b50509050806103ca576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c190610a21565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243648660405161041091906106e5565b60405180910390a25050505050565b600061042a8261047d565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546104769190610927565b9050919050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154036104d657600091505061052d565b60008160020154426104e8919061095b565b9050600061271062301ec06104fd9190610a41565b826101f485600001546105109190610a41565b61051a9190610a41565b6105249190610ab2565b90508093505050505b919050565b6101f481565b6000341161057b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057290610b55565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015411156106425760006105d53361047d565b9050808260000160008282546105eb9190610927565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f0620e4ec7ee94258441a55f50bad850361e50fbeb51ab591e35307ff38f63ce68260405161063891906106e5565b60405180910390a2505b348160000160008282546106569190610927565b925050819055504281600101819055504281600201819055503373ffffffffffffffffffffffffffffffffffffffff167fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c346040516106b591906106e5565b60405180910390a250565b62301ec081565b603281565b6000819050919050565b6106df816106cc565b82525050565b60006020820190506106fa60008301846106d6565b92915050565b600080fd5b61070e816106cc565b811461071957600080fd5b50565b60008135905061072b81610705565b92915050565b60006020828403121561074757610746610700565b5b60006107558482850161071c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107898261075e565b9050919050565b6107998161077e565b81146107a457600080fd5b50565b6000813590506107b681610790565b92915050565b6000602082840312156107d2576107d1610700565b5b60006107e0848285016107a7565b91505092915050565b600082825260208201905092915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b60006108306014836107e9565b915061083b826107fa565b602082019050919050565b6000602082019050818103600083015261085f81610823565b9050919050565b7f5769746864726177616c20616d6f756e74206d7573742062652067726561746560008201527f72207468616e2030000000000000000000000000000000000000000000000000602082015250565b60006108c26028836107e9565b91506108cd82610866565b604082019050919050565b600060208201905081810360008301526108f1816108b5565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610932826106cc565b915061093d836106cc565b9250828201905080821115610955576109546108f8565b5b92915050565b6000610966826106cc565b9150610971836106cc565b9250828203905081811115610989576109886108f8565b5b92915050565b600081905092915050565b50565b60006109aa60008361098f565b91506109b58261099a565b600082019050919050565b60006109cb8261099d565b9150819050919050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610a0b600f836107e9565b9150610a16826109d5565b602082019050919050565b60006020820190508181036000830152610a3a816109fe565b9050919050565b6000610a4c826106cc565b9150610a57836106cc565b9250828202610a65816106cc565b91508282048414831517610a7c57610a7b6108f8565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610abd826106cc565b9150610ac8836106cc565b925082610ad857610ad7610a83565b5b828204905092915050565b7f6465706f736974206d6f6e6579206d757374206265206d6f7265207468616e2060008201527f3000000000000000000000000000000000000000000000000000000000000000602082015250565b6000610b3f6021836107e9565b9150610b4a82610ae3565b604082019050919050565b60006020820190508181036000830152610b6e81610b32565b905091905056fea2646970667358221220e0f91500e611fa0120673fc43a0a85d8a5c421b37d1efecad5d5cd8ab459f6c764736f6c63430008140033";

type AShuBankTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AShuBankTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AShuBankT__factory extends ContractFactory {
  constructor(...args: AShuBankTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<AShuBankT> {
    return super.deploy(overrides || {}) as Promise<AShuBankT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AShuBankT {
    return super.attach(address) as AShuBankT;
  }
  override connect(signer: Signer): AShuBankT__factory {
    return super.connect(signer) as AShuBankT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AShuBankTInterface {
    return new utils.Interface(_abi) as AShuBankTInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AShuBankT {
    return new Contract(address, _abi, signerOrProvider) as AShuBankT;
  }
}
